---
#对象分解规则
rules:
  # 全局设置对象
  global:
    - config
    - env
  #API路径设置对象
  path:
    - router
    - controller
  #根据数据模型设置的模板对象
  schema:
    - model
    - crudController
    - validator

#基本的模板匹配规则
templates:
  - name: config
    path: "app/config/"
    stereotype: "php/config"
  - name: controller
    path: "app/{{application}}/{{module}}/controller"
    stereotype: "php/class"
  - name: crudController
    path: "app/{{application}}/{{module}}/controller"
    stereotype: "php/class"
    methods:
      #列表
      - name: index
        visibility: public
        params:
          - name: request
            type: think\Request
        return: mixed
        content: |
          return self::SUCCESS;
      #增加
      - name: create
        visibility: public
        params:
          - name: request
            type: think\Request
        return: mixed
        content: |
          return self::SUCCESS;
      #查看
      - name: read
        visibility: public
        params:
          - name: request
            type: think\Request
        return: mixed
        content: |
          return self::SUCCESS;
      #修改
      - name: update
        visibility: public
        params:
          - name: request
            type: think\Request
        return: mixed
        content: |
          return self::SUCCESS;
      #删除
      - name: delete
        visibility: public
        params:
          - name: request
            type: think\Request
        return: mixed
        content: |
          return self::SUCCESS;
  - name: model
    path: "app/{{application}}/{{module}}/model"
    stereotype: "php/class"
  - name: validator
    path: "app/{{application}}/{{module}}/validator"
    stereotype: "php/class"
    properties:
      - name: defaultName
        description: 默认命令名字
        visibility: protected
        is_static: true
        value: 'config:mysql'
      - name: defaultDescription
        description: 默认属性描述
        visibility: protected
        is_static: true
        value: '显示当前MySQL服务器配置'
  - name: command
    description: 扩展命令
    stereotype: "php/class"
    extends: Symfony\Component\Console\Command\Command
    properties:
      - name: defaultName
        description: 默认命令名字
        visibility: protected
        is_static: true
        value: 'config:mysql'
      - name: defaultDescription
        description: 默认属性描述
        visibility: protected
        is_static: true
        value: '显示当前MySQL服务器配置'
    methods:
      - name: execute
        visibility: protected
        params:
          - name: input
            type: Symfony\Component\Console\Input\InputInterface
          - name: output
            type: Symfony\Component\Console\Output\OutputInterface
        return: mixed
        content: |
          return self::SUCCESS;
  - name: middleware
    stereotype: "php/class"
    methods:
      - name: process
        return: response
        params:
          - name: request
            type: Request
          - name: handler
            type: callable
        content: |
          $response = $handler($request);
          $exception = $response->exception();
          if ($exception) {
            echo $exception->getMessage();
          }
          return $response;
  - name: event
    stereotype: "php/class"
    methods:
      - name: register
        return: void
        params:
          - name: request
            type: Request
        content: |
          Event::emit('{{class_name}}.{{action_name}}', ${{class_name}});